##################################################################################
calculate the hash of your metadata file
##################################################################################

cardano-cli stake-pool metadata-hash --pool-metadata-file ~/pool-keys/data/pool_Metadata.json > pool_MetadataHash.txt




##################################################################################
//air-gapped offline machine//
Update the below registration-certificate
##################################################################################

cardano-cli stake-pool registration-certificate \
--cold-verification-key-file ~/pool-keys/cold.vkey \
--vrf-verification-key-file ~/pool-keys/vrf.vkey \
--pool-pledge 100000000000 \
--pool-cost 340000000 \
--pool-margin 0.019 \
--pool-reward-account-verification-key-file ~/pool-keys/stake.vkey \
--pool-owner-stake-verification-key-file ~/pool-keys/stake.vkey \
--mainnet \
--pool-relay-ipv4 35.209.162.106 \
--pool-relay-port 3001 \
--pool-relay-ipv4 35.212.194.192 \
--pool-relay-port 3001 \
--metadata-url https://git.io/Jno2R \
--metadata-hash $(cat ~/pool-keys/data/pool_MetadataHash.txt) \
--out-file ~/pool-keys/data/pool-registration.cert




##################################################################################
//air-gapped offline machine//
To honor your pledge, create a delegation certificate:
##################################################################################

cardano-cli stake-address delegation-certificate \
--stake-verification-key-file ~/pool-keys/stake.vkey \
--cold-verification-key-file ~/pool-keys/cold.vkey \
--out-file ~/pool-keys/data/delegation.cert




##################################################################################
find the tip of the blockchain
##################################################################################

currentSlot=$(cardano-cli query tip --mainnet | jq -r '.slot')
echo Current Slot: $currentSlot




##################################################################################
Find your balance and UTXOs.
##################################################################################

cardano-cli query utxo \
    --address $(cat ~/pool-keys/payment.addr) \
    --mainnet > ~/pool-keys/data/fullUtxo.out

tail -n +3 ~/pool-keys/data/fullUtxo.out | sort -k3 -nr > ~/pool-keys/data/balance.out

cat ~/pool-keys/data/balance.out

tx_in=""
total_balance=0
while read -r utxo; do
    in_addr=$(awk '{ print $1 }' <<< "${utxo}")
    idx=$(awk '{ print $2 }' <<< "${utxo}")
    utxo_balance=$(awk '{ print $3 }' <<< "${utxo}")
    total_balance=$((${total_balance}+${utxo_balance}))
    echo TxHash: ${in_addr}#${idx}
    echo ADA: ${utxo_balance}
    tx_in="${tx_in} --tx-in ${in_addr}#${idx}"
done < ~/pool-keys/data/balance.out
txcnt=$(cat ~/pool-keys/data/balance.out | wc -l)
echo Total ADA balance: ${total_balance}
echo Number of UTXOs: ${txcnt}




##################################################################################
Draft the transaction
##################################################################################

cardano-cli transaction build-raw \
    ${tx_in} \
    --tx-out $(cat ~/pool-keys/payment.addr)+${total_balance} \
    --invalid-hereafter $(( ${currentSlot} + 10000)) \
    --fee 0 \
    --certificate-file ~/pool-keys/data/pool-registration.cert \
    --certificate-file ~/pool-keys/data/delegation.cert \
    --out-file ~/pool-keys/data/tx.tmp


##################################################################################
Get protocol parameters
##################################################################################

cardano-cli query protocol-parameters \
  --mainnet \
  --out-file ~/pool-keys/data/protocol.json
	


##################################################################################
Calculate the minimum fee:
##################################################################################

fee=$(cardano-cli transaction calculate-min-fee \
    --tx-body-file ~/pool-keys/data/tx.tmp \
    --tx-in-count ${txcnt} \
    --tx-out-count 1 \
    --mainnet \
    --witness-count 1 \
    --byron-witness-count 0 \
    --protocol-params-file ~/pool-keys/data/protocol.json | awk '{ print $1 }')
echo fee: $fee




##################################################################################
Calculate your change output.
##################################################################################

txOut=$((${total_balance}-${fee}))
echo txOut: ${txOut}




##################################################################################
Build the transaction. 
##################################################################################

cardano-cli transaction build-raw \
    ${tx_in} \
    --tx-out $(cat ~/pool-keys/payment.addr)+${txOut} \
    --invalid-hereafter $(( ${currentSlot} + 10000)) \
    --fee ${fee} \
    --certificate-file ~/pool-keys/data/pool-registration.cert \
    --certificate-file ~/pool-keys/data/delegation.cert \
    --out-file ~/pool-keys/data/tx.raw




##################################################################################
//air-gapped offline machine//
Sign the transaction.
##################################################################################

cardano-cli transaction sign \
    --tx-body-file ~/pool-keys/data/tx.raw \
    --signing-key-file ~/pool-keys/payment.skey \
    --signing-key-file ~/pool-keys/stake.skey \
    --signing-key-file ~/pool-keys/cold.skey \
    --mainnet \
    --out-file ~/pool-keys/data/tx.signed



##################################################################################
Send the transaction.
##################################################################################

cardano-cli transaction submit \
    --tx-file ~/pool-keys/data/tx.signed \
    --mainnet

cardano-cli query ledger-state --mainnet | grep publicKey | grep pool19ut4284xy9p82dd0cglzxweddfqw73yennkjk6mmp650chnr6lz
